#!/usr/bin/env bash

set -euxo pipefail

MANIFEST_NAME="ske-operator-distribution.yaml"
root=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )/.." &> /dev/null && pwd )

# Download the latest release manifest
latest_release="$(gh release list --repo=syntasso/enterprise-kratix --exclude-pre-releases --order desc --json tagName --jq "[ .[] | select(.tagName | match(\"ske-operator\")) ][0].tagName")"
if [ -z "$latest_release" ]; then
  echo "No release found for $COMPONENT"
  exit 1
fi

gh release download --repo=syntasso/enterprise-kratix "$latest_release" --pattern "${MANIFEST_NAME}"

# ensure to clean up the downloaded file
trap "rm ske-operator-distribution.yaml" EXIT

export latest_version=${latest_release#"ske-operator-"}

CHART_CRDS=$root/ske-operator/crds/crds.yaml
CHART_DISTRIBUTION=$root/ske-operator/templates/ske-operator-distribution.yaml

# split the manifest into CRDs and the rest
yq 'select(.kind == "CustomResourceDefinition")' ${MANIFEST_NAME} > ${CHART_CRDS}
yq 'select(.kind != "CustomResourceDefinition" and .kind != "Namespace")' ${MANIFEST_NAME} > ${CHART_DISTRIBUTION}

# generate the kustomize manifest
kubectl kustomize $root/ske-operator > $root/ske-operator/manifests.yaml
mv $root/ske-operator/manifests.yaml ${CHART_DISTRIBUTION}

# Bump current chart version (always a minor bump)
current_chart_version="$(yq -r '.version' ske-operator/Chart.yaml)"
export new_chart_version="$(echo $current_chart_version | awk -F. '{$2 = $2 + 1;} 1' | sed 's/ /./g')"
yq -i '.appVersion = strenv(latest_version) | .version = env(new_chart_version)' ske-operator/Chart.yaml
